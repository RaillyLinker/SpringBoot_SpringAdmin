[빌드 방법]

(1. 이미지 빌드)
- Dockerfile 파일을 기반으로 raillylinker/spring_admin:latest 이름의 이미지를 만듭니다.
> docker image build --pull=true -f Dockerfile -t raillylinker/spring_admin:latest .

(2. 이미지 파일 저장)
- 명령어 위치에 spring_admin.tar 라는 이름의 이미지 파일을 생성합니다.
> docker save -o spring_admin.tar raillylinker/spring_admin:latest

(3. 사용하지 않는 모든 이미지 삭제)
- 테스트를 위해 기존 이미지는 일단 제거해둡니다.
> docker image prune -af

(4. 이미지 파일에서 이미지 불러오기)
- 앞서 저장한 이미지 파일에서 이미지를 불러올 수 있는지 테스트 합니다.
> docker load -i spring_admin.tar

(5. 컨테이너 생성 및 실행)
- 불러온 raillylinker/spring_admin:latest 이미지를 실행하여 서버로서 정상 동작하는지 확인
> docker container run -d -e TZ=Asia/Seoul --rm -p8081:8081 --name spring_admin raillylinker/spring_admin:latest

(6. 컨테이너 명령창 띄우기)
> docker container exec -it spring_admin sh

(7. 컨테이너 명령창에서 나가기)
> exit

(8. 컨테이너 중단)
- 테스트를 완료한 컨테이너를 중단합니다.
> docker container stop server_dev

(9. 컨테이너 파기)
- 테스트를 완료한 컨테이너를 파기합니다.
> docker container rm server_dev

(10. 사용하지 않는 모든 이미지 삭제)
- 테스트를 완료한 이미지를 삭제합니다.
> docker image prune -af

(배포하기)
- 도커 테스트가 완료되었습니다.
    이제 server_prod.tar 파일을 원하는 컴퓨터의 원하는 위치에 복사하여,

    8. 기존 컨테이너 중단 ->
    9. 기존 컨테이너 파기 ->
    10. 사용하지 않는 모든 이미지 삭제 ->
    4. 이미지 파일에서 이미지 불러오기 ->
    5. 컨테이너 생성 및 실행

    위 순서대로 실행시키면 배포 완료입니다.